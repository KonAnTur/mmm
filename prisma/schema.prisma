datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Prompt {
  id        String   @id @default(uuid())
  name      String   @db.VarChar(120)
  text      String   @db.Text

  user      String
  
  // –°–≤—è–∑—å —Å –∏—Å—Ç–æ—Ä–∏–µ–π –∑–∞–ø—Ä–æ—Å–æ–≤
  requestHistory RequestHistory[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Users {
  id        String   @id @default(uuid())
  username  String?  @db.VarChar(120)  // –¥–µ–ª–∞–µ–º username –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º
  password  String?  @db.Text          // –¥–µ–ª–∞–µ–º password –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º
  email     String   @unique @db.VarChar(255)  // –¥–æ–±–∞–≤–ª—è–µ–º email –∫–∞–∫ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// –ù–æ–≤–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –∫–æ–¥–æ–≤ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
model VerificationCode {
  id        String   @id @default(uuid())
  email     String   @db.VarChar(255)
  code      String   @db.VarChar(6)
  expiresAt DateTime
  isUsed    Boolean  @default(false)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@index([email])
}

model UsersRelationProfiles {
  userId            String
  platform          String
  username          String

  @@id([userId, platform, username])
}

model UsersRelationHashtag {
  userId    String
  platform      String
  tag           String

  @@id([userId, platform, tag])
}

model Profiles {
  platform      String
  username      String
  displayName   String?
  profilePic    String?
  profileBio    String?
  followers     Int?     
  following     Int?     
  latestVideo   String?  
  comments      Int?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  public        Boolean? @default(true)

  @@id([platform, username])
}

model Posts {
  id             String   @id
  platform       String
  searchType     String
  username       String
  hashtag        String?   // üè∑Ô∏è –•–µ—à—Ç–µ–≥ –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –Ω–∞–π–¥–µ–Ω –ø–æ—Å—Ç
  url            String?
  caption        String?
  postType       String?
  takenAt        DateTime?
  likes          BigInt?
  videoPlayCount BigInt?
  comments       BigInt?
  durationSec    Float?
  raw            Json?
  timestamp      DateTime?
  isTemplate     Boolean?  @default(false)
  scrapedAt      DateTime
}

model Hashtag {
  id          String   @id @default(uuid())
  platform    String
  tag         String
  firstSeen   DateTime?
  totalPosts  Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([platform, tag])
}

model RequestHistory {
  id             String   @id @default(uuid())
  type           String   // 'transcription' –∏–ª–∏ 'reprocessing'
  user           String   // –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
  
  // –î–ª—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏
  videoUrl       String?  // URL Instagram –≤–∏–¥–µ–æ
  videoData      Json?    // –¥–∞–Ω–Ω—ã–µ –æ –≤–∏–¥–µ–æ (–ª–∞–π–∫–∏, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ —Ç.–¥.)
  
  // –î–ª—è –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏
  originalScript String?  @db.Text // –∏—Å—Ö–æ–¥–Ω—ã–π —Å–∫—Ä–∏–ø—Ç
  promptId       String?  // ID –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞
  prompt         Prompt?  @relation(fields: [promptId], references: [id])
  
  // –†–µ–∑—É–ª—å—Ç–∞—Ç
  result         String   @db.Text // —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞
  
  // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
  processingTime Int?     // –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
  status         String   @default("success") // success, error
  errorMessage   String?  @db.Text
  
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}